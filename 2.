class Task:
    def __init__(self, name):
        self.name = name
        self.is_completed = False

    def mark_as_completed(self):
        self.is_completed = True

    def __str__(self):
        status = "Tamamlandı" if self.is_completed else "Tamamlanmadı"
        return f"{self.name} - {status}"


class TaskManager:
    def __init__(self):
        self.tasks = []

    def add_task(self, name):
        self.tasks.append(Task(name))

    def complete_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_as_completed()
        else:
            print("Geçersiz görev numarası!")

    def delete_task(self, index):
        if 0 <= index < len(self.tasks):
            del self.tasks[index]
        else:
            print("Geçersiz görev numarası!")

    def list_tasks(self):
        print("\nYapılacaklar Listesi:")
        for i, task in enumerate(self.tasks):
            print(f"{i}. {task}")


def main():
    manager = TaskManager()

    while True:
        print("\n1. Görev Ekle\n2. Görevi Tamamla\n3. Görev Sil\n4. Görevleri Listele\n5. Çık")
        choice = input("Seçiminiz: ")

        if choice == "1":
            name = input("Görev Adı: ")
            manager.add_task(name)
        elif choice == "2":
            manager.list_tasks()
            try:
                index = int(input("Tamamlamak istediğiniz görevin numarası: "))
                manager.complete_task(index)
            except ValueError:
                print("Lütfen geçerli bir sayı girin!")
        elif choice == "3":
            manager.list_tasks()
            try:
                index = int(input("Silmek istediğiniz görevin numarası: "))
                manager.delete_task(index)
            except ValueError:
                print("Lütfen geçerli bir sayı girin!")
        elif choice == "4":
            manager.list_tasks()
        elif choice == "5":
            print("Uygulama sonlandırılıyor...")
            break
        else:
            print("Geçersiz seçim!")


if __name__ == "__main__":
    main()
